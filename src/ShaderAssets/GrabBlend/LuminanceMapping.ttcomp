/*
BEGIN__TT_COMPUTE_SHADER_HEADER

Language HLSL
LanguageVersion 2018

TTComputeType GrabBlend

ColorSpace Gamma

END__TT_COMPUTE_SHADER_HEADER
*/

#include "../Blendings/SetSL.hlsl"

cbuffer gv
{
    uint GradientTextureWidth;

    float AlimentPadding_;
    float AlimentPadding__;
    float AlimentPadding___;
}
StructuredBuffer<float4> GradientTexture;
RWTexture2D<float4> Tex;

[numthreads(32, 32, 1)] void CSMain(uint3 id : SV_DispatchThreadID)
{
    float4 col = Tex[id.xy];

    float lumPos = GetLum(col.rgb) * (GradientTextureWidth - 1.0);

    float4 fCol = GradientTexture[floor(lumPos)];
    float4 cCol = GradientTexture[ceil(lumPos)];

    float4 mappedCol = lerp(fCol , cCol, frac(lumPos));

    Tex[id.xy] = mappedCol;
}
